@using Lab2_ImageService.Models.ViewModel;
@model Lab2_ImageService.Models.ViewModel.ImageAnalysisViewModel


@using (Html.BeginForm("UploadImage", "ImageAnalyze", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*Displaying Analysis results*@
    <div class=" row">
        <div class="col-sm-6">

            @if (ViewData["ImageUrl"] != null)
            {
                var imageUrl = ViewData["ImageUrl"].ToString();

                @if (Uri.IsWellFormedUriString(imageUrl, UriKind.Absolute))
                {
                    // Display image from URL
                    <img src="@imageUrl" alt="Image from URL" class="img-thumbnail" />
                }
                else
                {
                    // Display image from local file
                    <img src="~/UploadedImages/@imageUrl" alt="Uploaded Image" class="img-thumbnail" />
                }
            }


        </div>
        <div class="col-sm-6 small">

            @if (ViewData["ImageAnalysisViewModel"] != null)
            {
                var imageAnalysisView = (ImageAnalysisViewModel)ViewData["ImageAnalysisViewModel"];
                <h5>Description</h5>
                foreach (var caption in imageAnalysisView.ImageAnalysisResult.Description.Captions)
                {
                    <span class="badge badge-pill badge-info"> @caption.Text: with confidence @caption.Confidence.ToString("P")</span>

                    <br />
                }
                <hr />
                <h5>Category:</h5>
                foreach (var category in imageAnalysisView.ImageAnalysisResult.Categories)
                {
                    <li> @category.Name (Confidence: @category.Score.ToString("P"))</li>

                    <br />

                    <hr />
                    <h5>Landmarks</h5>
                    if (category.Detail?.Landmarks != null && category.Detail.Landmarks.Any())
                    {
                        foreach (var landmark in category.Detail.Landmarks)
                        {
                            <li>@landmark.Name (Confidence: @landmark.Confidence.ToString("P"))</li>
                        }
                    }
                    else
                    {
                        <p class="badge badge-pill badge-success">No landmarks detected</p>
                    }
                }
                <hr />
                <h5>Tags</h5>
                foreach (var tag in imageAnalysisView.ImageAnalysisResult.Tags)
                {
                    <span class="badge badge-pill badge-success">@tag.Name - @tag.Confidence.ToString("P")</span>
                }
                <hr />
                <h5>Object Detection</h5>
                @if (imageAnalysisView.ImageAnalysisResult.Objects.Count == 0)
                {
                    <span class="badge badge-pill badge-danger">No object detected</span>
                }
                else
                {
                    foreach (var obj in imageAnalysisView.ImageAnalysisResult.Objects)
                    {

                        <span class="badge badge-pill badge-warning">@obj.ObjectProperty with Confidence @obj.Confidence.ToString("P")</span>
                    }
                }

                <hr />

                <h5>Brands</h5>
                @if(imageAnalysisView.ImageAnalysisResult.Brands.Count == 0)
                {
                    <span class="badge badge-pill badge-danger">No object detected</span>    
                }
                else
                {
                    foreach (var obj in imageAnalysisView.ImageAnalysisResult.Brands)
                    {
                        <span class="badge badge-pill badge-info">@obj.Rectangle @obj.Confidence.ToString("P")</span>
                    }
                }

                <hr />
                <h5>Face Detection</h5>
                @if (imageAnalysisView.ImageAnalysisResult.Faces.Count == 0)
                {
                    <span class="badge badge-pill badge-danger">No faces detected</span>
                }
                else
                {
                    @foreach (var face in imageAnalysisView.ImageAnalysisResult.Faces)
                    {
                        <span class="badge badge-pill badge-info">
                            A @face.Gender of age @face.Age at location (Left: @face.FaceRectangle.Left, Top: @face.FaceRectangle.Top, Width: @face.FaceRectangle.Width, Height: @face.FaceRectangle.Height)
                        </span>
                        <br />
                    }
                }
                <hr />
                <h5>Image color scheme</h5>
                <span class="badge badge-pill badge-secondary">Is black and white?:@imageAnalysisView.ImageAnalysisResult.Color.IsBWImg</span>
                <span class="badge badge-pill badge-secondary">Accent color:@imageAnalysisView.ImageAnalysisResult.Color.AccentColor</span>
                <span class="badge badge-pill badge-secondary">Dominant background color:@imageAnalysisView.ImageAnalysisResult.Color.DominantColorBackground</span>
                <span class="badge badge-pill badge-secondary">Dominant foreground color:@imageAnalysisView.ImageAnalysisResult.Color.DominantColorForeground</span>
                <hr />
                <h5>Image Type</h5>
                @if (imageAnalysisView.ImageAnalysisResult.ImageType.ClipArtType == 0)
                {
                    <p>No Clip Art type detected</p>
                }
                else
                {
                    <span class="badge badge-pill badge-secondary">Clip Art Type: @imageAnalysisView.ImageAnalysisResult.ImageType.ClipArtType</span>
                }
                @if (imageAnalysisView.ImageAnalysisResult.ImageType.LineDrawingType == 0)
                {
                    <p>No Line Drawing type detected</p>
                }
                else
                {
                    <span class="badge badge-pill badge-secondary">Line Drawing Type: @imageAnalysisView.ImageAnalysisResult.ImageType.LineDrawingType</span>
                }
                <hr />

                <h5>Adult</h5>

                <p>
                    <span class="badge badge-pill badge-info">Racy content: @imageAnalysisView.ImageAnalysisResult.Adult.IsRacyContent</span>
                    <span class="badge badge-pill badge-danger">Racy score: @imageAnalysisView.ImageAnalysisResult.Adult.RacyScore.ToString("P")</span>
                </p>
                <p>
                    <span class="badge badge-pill badge-info">Adult content: @imageAnalysisView.ImageAnalysisResult.Adult.IsAdultContent</span>
                    <span class="badge badge-pill badge-danger">Adult score: @imageAnalysisView.ImageAnalysisResult.Adult.AdultScore.ToString("P")</span>
                </p>
                <p>
                    <span class="badge badge-pill badge-info">Violent content: @imageAnalysisView.ImageAnalysisResult.Adult.IsGoryContent</span>
                    <span class="badge badge-pill badge-danger">Violent score: @imageAnalysisView.ImageAnalysisResult.Adult.GoreScore.ToString("P")</span>
                </p>
                <hr />

            }

        </div>
    </div>
}
<script>
     // Find all <span> elements in the document
     var spanElements = document.getElementsByTagName("span");

     // Add the "custom-span" class to each <span> element
     for (var i = 0; i < spanElements.length; i++) {
         spanElements[i].classList.add("custom-span");
     }

</script>