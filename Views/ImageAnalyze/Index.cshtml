@using Lab2_ImageService.Models.ViewModel;
@model Lab2_ImageService.Models.ViewModel.ImageAnalysisViewModel

@{
    ViewData["Title"] = "Home page";
}

@{
    var objectsImages = ViewData["ObjectsImages"] as List<string>;
    var thumbnailsImages = ViewData["ThumbnailsImages"] as List<string>;
    var uploadedImages = ViewData["UploadedImages"] as List<string>;
}

<div class="content">
    <div class="analysisResult">

        <div class="text-center m-3">
            <h4 class="text-white">Lab2 | Image Analysis with Azure cognitive service</h4>
        </div>
        <div>
            <div>
                <button id="openModal" data-toggle="modal" data-target="modalPopup">All images</button>
                @* @Html.Partial("_ObjectsBox") *@
            </div>

        </div>

        @using (Html.BeginForm("UploadImage", "ImageAnalyze", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            <div class="form-group">
                <label for="imageFile">Choose a local image file:</label>
                <input type="file" class="form-control-file" id="imageFile" name="LocalImageFile" accept=".jpg, .jpeg, .png">
            </div>

            <div class="form-group">
                <label for="imageUrl">OR Enter an image URL:</label>
                <input type="text" class="form-control" id="imageUrl" name="ImageUrl" placeholder="Enter image URL">
            </div>

            <hr />

            <div class="form-check">
                <label for="createThumbnail" class="">Create Thumbnail:</label>
                <input type="checkbox" class="" id="createThumbnail" name="CreateThumbnail">
            </div>

            <div class="form-group">
                <label for="ThumbnailWidth">Thumbnail Width (in pixels):</label>
                <input type="number" class="thumbnail-form form-control" id="thumbnailWidth" name="ThumbnailWidth">
            </div>

            <div class="form-group">
                <label for="thumbnailHeight">Thumbnail Height (in pixels):</label>
                <input type="number" class="thumbnail-form form-control" id="thumbnailHeight" name="ThumbnailHeight">
            </div>

            <button type="submit" class="btn btn-primary">Upload and Analyze</button>

            @if (!string.IsNullOrEmpty(ViewData["SuccessMessage"] as string))
            {
                <span class="badge badge-success">@ViewData["SuccessMessage"]</span>
            }

            <script>
                $(document).ready(function () {
                    $('form').on('change', ':checkbox', function () {
                        if (this.checked) {
                            $(this).val(true);
                        }
                        else {
                            $(this).val(false);
                        }
                    });
                });
            </script>

            @*Displaying Analysis results*@
            <div class=" row">
                <div class="col-sm-6">

                    @if (ViewData["ImageUrl"] != null)
                    {
                        var imageUrl = ViewData["ImageUrl"].ToString();

                        @if (Uri.IsWellFormedUriString(imageUrl, UriKind.Absolute))
                        {
                            // Display image from URL
                            <img src="@imageUrl" alt="Image from URL" class="img-thumbnail" />
                        }
                        else
                        {
                            // Display image from local file
                            <img src="~/UploadedImages/@imageUrl" alt="Uploaded Image" class="img-thumbnail" />
                        }
                    }


                </div>
                <div class="col-sm-6 small">

                    @if (ViewData["ImageAnalysisViewModel"] != null)
                    {
                        var imageAnalysisView = (ImageAnalysisViewModel)ViewData["ImageAnalysisViewModel"];
                        <h5>Description</h5>
                        foreach (var caption in imageAnalysisView.ImageAnalysisResult.Description.Captions)
                        {
                            <span class="text-info"> @caption.Text: with confidence @caption.Confidence.ToString("P")</span>

                            <br />
                        }
                        <hr />
                        <h5>Category:</h5>
                        foreach (var category in imageAnalysisView.ImageAnalysisResult.Categories)
                        {
                            <li> @category.Name (Confidence: @category.Score.ToString("P"))</li>

                            <br />

                            <hr />
                            <h5>Landmarks</h5>
                            if (category.Detail?.Landmarks != null && category.Detail.Landmarks.Any())
                            {
                                foreach (var landmark in category.Detail.Landmarks)
                                {
                                    <li>@landmark.Name (Confidence: @landmark.Confidence.ToString("P"))</li>
                                }
                            }
                            else
                            {
                                <p class="badge badge-pill badge-success">No landmarks detected</p>
                            }
                        }
                        <hr />
                        <h5>Tags</h5>
                        foreach (var tag in imageAnalysisView.ImageAnalysisResult.Tags)
                        {
                            <span class="badge  badge-pill badge-success">@tag.Name - @tag.Confidence.ToString("P")</span>
                        }
                        <hr />
                        <h5>Object Detection</h5>
                        foreach (var obj in imageAnalysisView.ImageAnalysisResult.Objects)
                        {

                            <span class="badge  badge-pill badge-warning">@obj.ObjectProperty with Confidence @obj.Confidence.ToString("P")</span>
                        }

                        <hr />

                        <h5>Brands</h5>
                        foreach (var obj in imageAnalysisView.ImageAnalysisResult.Brands)
                        {
                            <span class="badge  badge-pill badge-info">@obj.Rectangle @obj.Confidence.ToString("P")</span>
                        }
                        <hr />
                        <h5>Face Detection</h5>
                        @if (imageAnalysisView.ImageAnalysisResult.Faces.Count == 0)
                        {
                            <span class="badge  badge-pill badge-danger">No faces detected</span>
                        }
                        else
                        {
                            @foreach (var face in imageAnalysisView.ImageAnalysisResult.Faces)
                            {
                                <span class="badge  badge-pill badge-info">
                                    A @face.Gender of age @face.Age at location (Left: @face.FaceRectangle.Left, Top: @face.FaceRectangle.Top, Width: @face.FaceRectangle.Width, Height: @face.FaceRectangle.Height)
                                </span>
                                <br />
                            }
                        }
                        <hr />
                        <h5>Image color scheme</h5>
                        <span class="badge  badge-pill badge-secondary">Is black and white?:@imageAnalysisView.ImageAnalysisResult.Color.IsBWImg</span>
                        <span class="badge  badge-pill badge-secondary">Accent color:@imageAnalysisView.ImageAnalysisResult.Color.AccentColor</span>
                        <span class="badge  badge-pill badge-secondary">Dominant background color:@imageAnalysisView.ImageAnalysisResult.Color.DominantColorBackground</span>
                        <span class="badge  badge-pill badge-secondary">Dominant foreground color:@imageAnalysisView.ImageAnalysisResult.Color.DominantColorForeground</span>
                        <hr />
                        <h5>Image Type</h5>
                        <span class="badge  badge-pill badge-secondary">Clip Art Type: @imageAnalysisView.ImageAnalysisResult.ImageType.ClipArtType</span>
                        <span class="badge  badge-pill badge-secondary">Line Drawing Type: @imageAnalysisView.ImageAnalysisResult.ImageType.LineDrawingType</span>
                        <hr />
                        <h5>Adult</h5>

                        <p>
                            <span class="badge badge-pill badge-info">Racy content: @imageAnalysisView.ImageAnalysisResult.Adult.IsRacyContent</span>
                            <span class="badge badge-pill badge-danger">Racy score: @imageAnalysisView.ImageAnalysisResult.Adult.RacyScore.ToString("P")</span>
                        </p>
                        <p>
                            <span class="badge badge-pill badge-info">Adult content: @imageAnalysisView.ImageAnalysisResult.Adult.IsAdultContent</span>
                            <span class="badge badge-pill badge-danger">Adult score: @imageAnalysisView.ImageAnalysisResult.Adult.AdultScore.ToString("P")</span>
                        </p>
                        <p>
                            <span class="badge badge-pill badge-info">Violent content: @imageAnalysisView.ImageAnalysisResult.Adult.IsGoryContent</span>
                            <span class="badge badge-pill badge-danger">Violent score: @imageAnalysisView.ImageAnalysisResult.Adult.GoreScore.ToString("P")</span>
                        </p>
                        <hr />

                    }

                </div>
            </div>
        }
    </div>
</div>

@* script for modal content*@
<script src="~/js/modalScript.js"></script>

@* Modal for all images uploaded/Analyzed *@
<div id="modalPopup" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="modalPopupLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">All images</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3>Uploaded Images:</h3>
                <select id="uploadedDropdown" onchange="showImage(this.value, 'uploadedImages')">
                    <option value="Option1">Uploaded</option>
                    @foreach (var image in uploadedImages)
                    {
                        <option value="UploadedImages/@image">@image</option>
                    }

                </select>

                <h3>Thumbnails Images:</h3>
                <select id="thumbnailsDropdown" onchange="showImage(this.value, 'thumbnails')">
                    <option>Thumbnails</option>
                    @foreach (var image in thumbnailsImages)
                    {
                        <option value="Thumbnails/@image">@image</option>
                    }
                </select>

                <h3>Objects Images:</h3>
                <select id="objectsDropdown" onchange="showImage(this.value, 'objects')">
                    <option>Bounding boxes</option>
                    @foreach (var image in objectsImages)
                    {
                        <option value="Objects/@image">@image</option>
                    }

                </select>
                <hr />
                <div class="modal-body">
                    <div class="text-center">
                        <!-- Download link -->
                        <a id="downloadLink" href="#" download="selectedImage.jpg" style="display: none;">Download Image</a>
                    </div>
                    <hr />
                    <!-- The selected image will fit inside the modal -->
                    <img id="selectedImage" class="modalImage img-fluid" src="" alt="Selected Image" style="display: none;">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const checkbox = document.getElementById("addThumbnail");

        checkbox.addEventListener("change", function () {
            if (checkbox.checked) {
                console.log("Checkbox is checked");
            } else {
                console.log("Checkbox is unchecked");
            }
        });
    });
</script>
